

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Mar 13 10:13:36 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F1822 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0015                     	;# 
    67     0016                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001B                     	;# 
    74     001C                     	;# 
    75     001E                     	;# 
    76     001F                     	;# 
    77     008C                     	;# 
    78     0091                     	;# 
    79     0092                     	;# 
    80     0095                     	;# 
    81     0096                     	;# 
    82     0097                     	;# 
    83     0098                     	;# 
    84     0099                     	;# 
    85     009A                     	;# 
    86     009B                     	;# 
    87     009B                     	;# 
    88     009C                     	;# 
    89     009D                     	;# 
    90     009E                     	;# 
    91     010C                     	;# 
    92     0111                     	;# 
    93     0112                     	;# 
    94     0115                     	;# 
    95     0116                     	;# 
    96     0117                     	;# 
    97     0118                     	;# 
    98     0119                     	;# 
    99     011A                     	;# 
   100     011B                     	;# 
   101     011D                     	;# 
   102     011D                     	;# 
   103     018C                     	;# 
   104     0191                     	;# 
   105     0191                     	;# 
   106     0192                     	;# 
   107     0193                     	;# 
   108     0193                     	;# 
   109     0193                     	;# 
   110     0194                     	;# 
   111     0195                     	;# 
   112     0196                     	;# 
   113     0199                     	;# 
   114     019A                     	;# 
   115     019B                     	;# 
   116     019B                     	;# 
   117     019B                     	;# 
   118     019B                     	;# 
   119     019C                     	;# 
   120     019C                     	;# 
   121     019D                     	;# 
   122     019E                     	;# 
   123     019F                     	;# 
   124     020C                     	;# 
   125     0211                     	;# 
   126     0211                     	;# 
   127     0212                     	;# 
   128     0212                     	;# 
   129     0213                     	;# 
   130     0213                     	;# 
   131     0214                     	;# 
   132     0214                     	;# 
   133     0215                     	;# 
   134     0215                     	;# 
   135     0215                     	;# 
   136     0216                     	;# 
   137     0216                     	;# 
   138     0217                     	;# 
   139     0217                     	;# 
   140     0291                     	;# 
   141     0291                     	;# 
   142     0292                     	;# 
   143     0293                     	;# 
   144     0294                     	;# 
   145     0295                     	;# 
   146     0295                     	;# 
   147     0296                     	;# 
   148     0391                     	;# 
   149     0392                     	;# 
   150     0393                     	;# 
   151     039A                     	;# 
   152     039C                     	;# 
   153     039D                     	;# 
   154     039E                     	;# 
   155     039F                     	;# 
   156     0FE4                     	;# 
   157     0FE5                     	;# 
   158     0FE6                     	;# 
   159     0FE7                     	;# 
   160     0FE8                     	;# 
   161     0FE9                     	;# 
   162     0FEA                     	;# 
   163     0FEB                     	;# 
   164     0FED                     	;# 
   165     0FEE                     	;# 
   166     0FEF                     	;# 
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0016                     	;# 
   185     0017                     	;# 
   186     0018                     	;# 
   187     0019                     	;# 
   188     001A                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001E                     	;# 
   192     001F                     	;# 
   193     008C                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     010C                     	;# 
   208     0111                     	;# 
   209     0112                     	;# 
   210     0115                     	;# 
   211     0116                     	;# 
   212     0117                     	;# 
   213     0118                     	;# 
   214     0119                     	;# 
   215     011A                     	;# 
   216     011B                     	;# 
   217     011D                     	;# 
   218     011D                     	;# 
   219     018C                     	;# 
   220     0191                     	;# 
   221     0191                     	;# 
   222     0192                     	;# 
   223     0193                     	;# 
   224     0193                     	;# 
   225     0193                     	;# 
   226     0194                     	;# 
   227     0195                     	;# 
   228     0196                     	;# 
   229     0199                     	;# 
   230     019A                     	;# 
   231     019B                     	;# 
   232     019B                     	;# 
   233     019B                     	;# 
   234     019B                     	;# 
   235     019C                     	;# 
   236     019C                     	;# 
   237     019D                     	;# 
   238     019E                     	;# 
   239     019F                     	;# 
   240     020C                     	;# 
   241     0211                     	;# 
   242     0211                     	;# 
   243     0212                     	;# 
   244     0212                     	;# 
   245     0213                     	;# 
   246     0213                     	;# 
   247     0214                     	;# 
   248     0214                     	;# 
   249     0215                     	;# 
   250     0215                     	;# 
   251     0215                     	;# 
   252     0216                     	;# 
   253     0216                     	;# 
   254     0217                     	;# 
   255     0217                     	;# 
   256     0291                     	;# 
   257     0291                     	;# 
   258     0292                     	;# 
   259     0293                     	;# 
   260     0294                     	;# 
   261     0295                     	;# 
   262     0295                     	;# 
   263     0296                     	;# 
   264     0391                     	;# 
   265     0392                     	;# 
   266     0393                     	;# 
   267     039A                     	;# 
   268     039C                     	;# 
   269     039D                     	;# 
   270     039E                     	;# 
   271     039F                     	;# 
   272     0FE4                     	;# 
   273     0FE5                     	;# 
   274     0FE6                     	;# 
   275     0FE7                     	;# 
   276     0FE8                     	;# 
   277     0FE9                     	;# 
   278     0FEA                     	;# 
   279     0FEB                     	;# 
   280     0FED                     	;# 
   281     0FEE                     	;# 
   282     0FEF                     	;# 
   283                           
   284                           	psect	stringtext1
   285     0114                     __pstringtext1:
   286     0114                     _initSequence:
   287     0114  340C               	retlw	12
   288     0115  3401               	retlw	1
   289     0116  3409               	retlw	9
   290     0117  3400               	retlw	0
   291     0118  340A               	retlw	10
   292     0119  340F               	retlw	15
   293     011A  340B               	retlw	11
   294     011B  3405               	retlw	5
   295     011C  340F               	retlw	15
   296     011D  3400               	retlw	0
   297     011E  3401               	retlw	1
   298     011F  34FF               	retlw	255
   299     0120  3402               	retlw	2
   300     0121  34FF               	retlw	255
   301     0122  3403               	retlw	3
   302     0123  34FF               	retlw	255
   303     0124  3404               	retlw	4
   304     0125  34FF               	retlw	255
   305     0126  3405               	retlw	5
   306     0127  34FF               	retlw	255
   307     0128  3406               	retlw	6
   308     0129  34FF               	retlw	255
   309     012A  3407               	retlw	7
   310     012B  34FF               	retlw	255
   311     012C  3408               	retlw	8
   312     012D  34FF               	retlw	255
   313     012E                     __end_of_initSequence:
   314     0011                     _PIR1bits	set	17
   315     000B                     _INTCONbits	set	11
   316     008D                     _RCIF	set	141
   317     0091                     _PIE1bits	set	145
   318     008C                     _TRISA	set	140
   319     009A                     _OSCSTATbits	set	154
   320     0099                     _OSCCONbits	set	153
   321     048D                     _RCIE	set	1165
   322     011D                     _APFCON	set	285
   323     010C                     _LATAbits	set	268
   324     0199                     _RCREG	set	409
   325     019B                     _SPBRGL	set	411
   326     019C                     _SPBRGH	set	412
   327     019F                     _BAUDCON	set	415
   328     019D                     _RCSTA	set	413
   329     019E                     _TXSTA	set	414
   330     018C                     _ANSELA	set	396
   331     0215                     _SSP1CON1	set	533
   332     0214                     _SSPSTAT	set	532
   333     0214                     _SSPSTATbits	set	532
   334     0211                     _SSPBUF	set	529
   335                           
   336                           	psect	cinit
   337     0027                     start_initialization:	
   338                           ; #config settings
   339                           
   340     0027                     __initialization:
   341                           
   342                           ; Clear objects allocated to BANK0
   343     0027  0020               	movlb	0	; select bank0
   344     0028  01A0               	clrf	__pbssBANK0& (0+127)
   345     0029  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   346     002A  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   347     002B  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   348     002C  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   349     002D  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   350     002E  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   351     002F                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354     002F                     __end_of__initialization:
   355     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   356     0030  0020               	movlb	0
   357     0031  2832               	ljmp	_main	;jump to C main() function
   358                           
   359                           	psect	bssBANK0
   360     0020                     __pbssBANK0:
   361     0020                     _Buffer:
   362     0020                     	ds	7
   363                           
   364                           	psect	cstackCOMMON
   365     0070                     __pcstackCOMMON:
   366     0070                     ?_main:
   367     0070                     ?_ISR:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ??_ISR:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 1 bytes @ 0x0
   375     0070                     	ds	1
   376     0071                     ISR@data:
   377                           
   378                           ; 1 bytes @ 0x1
   379     0071                     	ds	1
   380     0072                     ?_max7219_write:
   381     0072                     max7219_write@data:	
   382                           ; 1 bytes @ 0x2
   383                           
   384                           
   385                           ; 1 bytes @ 0x2
   386     0072                     	ds	1
   387     0073                     ??_max7219_write:
   388     0073                     max7219_write@address:	
   389                           ; 1 bytes @ 0x3
   390                           
   391                           
   392                           ; 1 bytes @ 0x3
   393     0073                     	ds	1
   394     0074                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x4
   397     0074                     	ds	4
   398                           
   399                           	psect	cstackBANK0
   400     0027                     __pcstackBANK0:
   401     0027                     main@currentLedIndex:
   402                           
   403                           ; 1 bytes @ 0x0
   404     0027                     	ds	1
   405     0028                     main@tempData:
   406                           
   407                           ; 1 bytes @ 0x1
   408     0028                     	ds	1
   409     0029                     main@i_252:
   410                           
   411                           ; 1 bytes @ 0x2
   412     0029                     	ds	1
   413     002A                     main@i_278:
   414                           
   415                           ; 1 bytes @ 0x3
   416     002A                     	ds	1
   417     002B                     main@j:
   418                           
   419                           ; 1 bytes @ 0x4
   420     002B                     	ds	1
   421     002C                     main@i:
   422                           
   423                           ; 1 bytes @ 0x5
   424     002C                     	ds	1
   425                           
   426                           	psect	maintext
   427     0032                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 87 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  j               1    4[BANK0 ] unsigned char 
   438 ;;  tempData        1    1[BANK0 ] unsigned char 
   439 ;;  i               1    3[BANK0 ] unsigned char 
   440 ;;  currentLedIn    1    0[BANK0 ] unsigned char 
   441 ;;  i               1    2[BANK0 ] unsigned char 
   442 ;;  i               1    5[BANK0 ] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : B1F/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1
   452 ;;      Params:         0       0       0
   453 ;;      Locals:         0       6       0
   454 ;;      Temps:          4       0       0
   455 ;;      Totals:         4       6       0
   456 ;;Total ram usage:       10 bytes
   457 ;; Hardware stack levels required when called: 2
   458 ;; This function calls:
   459 ;;		_max7219_write
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     0032                     _main:	
   466                           ;psect for function _main
   467                           
   468     0032                     l809:	
   469                           ;incstack = 0
   470                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   471                           
   472                           
   473                           ;main.c: 88:  OSCCONbits.IRCF = 0b1110;
   474     0032  0021               	movlb	1	; select bank1
   475     0033  0819               	movf	25,w	;volatile
   476     0034  3987               	andlw	-121
   477     0035  3870               	iorlw	112
   478     0036  0099               	movwf	25	;volatile
   479     0037                     l64:	
   480                           ;main.c: 89:  while ( !OSCSTATbits.HFIOFR );
   481                           
   482     0037  1E1A               	btfss	26,4	;volatile
   483     0038  283A               	goto	u191
   484     0039  283B               	goto	u190
   485     003A                     u191:
   486     003A  2837               	goto	l64
   487     003B                     u190:
   488     003B                     l811:
   489                           
   490                           ;main.c: 91:  ANSELA = 0x00;
   491     003B  0023               	movlb	3	; select bank3
   492     003C  018C               	clrf	12	;volatile
   493     003D                     l813:
   494                           
   495                           ;main.c: 92:  APFCON = 0x84;
   496     003D  3084               	movlw	132
   497     003E  0022               	movlb	2	; select bank2
   498     003F  009D               	movwf	29	;volatile
   499     0040                     l815:
   500                           
   501                           ;main.c: 94:  LATAbits.LATA2 = 1;
   502     0040  150C               	bsf	12,2	;volatile
   503     0041                     l817:
   504                           
   505                           ;main.c: 95:  TRISA = 0xF8;
   506     0041  30F8               	movlw	248
   507     0042  0021               	movlb	1	; select bank1
   508     0043  008C               	movwf	12	;volatile
   509     0044                     l819:
   510                           
   511                           ;main.c: 99:  TXSTA = 0x24;
   512     0044  3024               	movlw	36
   513     0045  0023               	movlb	3	; select bank3
   514     0046  009E               	movwf	30	;volatile
   515     0047                     l821:
   516                           
   517                           ;main.c: 100:  RCSTA = 0x90;
   518     0047  3090               	movlw	144
   519     0048  009D               	movwf	29	;volatile
   520     0049                     l823:
   521                           
   522                           ;main.c: 101:  BAUDCON = 0x48;
   523     0049  3048               	movlw	72
   524     004A  009F               	movwf	31	;volatile
   525     004B                     l825:
   526                           
   527                           ;main.c: 102:  SPBRGH = 0;
   528     004B  019C               	clrf	28	;volatile
   529                           
   530                           ;main.c: 103:  SPBRGL = 68;
   531     004C  3044               	movlw	68
   532     004D  009B               	movwf	27	;volatile
   533     004E                     l827:
   534                           
   535                           ;main.c: 107:  SSPSTAT = 0x00;
   536     004E  0024               	movlb	4	; select bank4
   537     004F  0194               	clrf	20	;volatile
   538     0050                     l829:
   539                           
   540                           ;main.c: 108:  SSP1CON1 = 0x20;
   541     0050  3020               	movlw	32
   542     0051  0095               	movwf	21	;volatile
   543                           
   544                           ;main.c: 112:  for (uint8_t i = 0; i < sizeof(initSequence)/2; i++){
   545     0052  0020               	movlb	0	; select bank0
   546     0053  01AC               	clrf	main@i
   547     0054                     l835:
   548                           
   549                           ;main.c: 113:   max7219_write(initSequence[i][0], initSequence[i][1]);
   550     0054  082C               	movf	main@i,w
   551     0055  00F4               	movwf	??_main
   552     0056  01F5               	clrf	??_main+1
   553     0057  35F4               	lslf	??_main,f
   554     0058  0DF5               	rlf	??_main+1,f
   555     0059  3015               	movlw	low (_initSequence+1)
   556     005A  0774               	addwf	??_main,w
   557     005B  0084               	movwf	4
   558     005C  3001               	movlw	high (_initSequence+1)
   559     005D  3D75               	addwfc	??_main+1,w
   560     005E  3880               	iorlw	128
   561     005F  0085               	movwf	5
   562     0060  0800               	movf	0,w	;code access
   563     0061  00F2               	movwf	max7219_write@data
   564     0062  082C               	movf	main@i,w
   565     0063  00F6               	movwf	??_main+2
   566     0064  01F7               	clrf	??_main+3
   567     0065  35F6               	lslf	??_main+2,f
   568     0066  0DF7               	rlf	??_main+3,f
   569     0067  3014               	movlw	low _initSequence
   570     0068  0776               	addwf	??_main+2,w
   571     0069  0084               	movwf	4
   572     006A  3001               	movlw	high _initSequence
   573     006B  3D77               	addwfc	??_main+3,w
   574     006C  3880               	iorlw	128
   575     006D  0085               	movwf	5
   576     006E  0800               	movf	0,w	;code access
   577     006F  3181  212E  3180   	fcall	_max7219_write
   578     0072                     l837:
   579                           
   580                           ;main.c: 114:  }
   581     0072  3001               	movlw	1
   582     0073  00F4               	movwf	??_main
   583     0074  0874               	movf	??_main,w
   584     0075  0020               	movlb	0	; select bank0
   585     0076  07AC               	addwf	main@i,f
   586     0077                     l839:
   587     0077  300D               	movlw	13
   588     0078  022C               	subwf	main@i,w
   589     0079  1C03               	skipc
   590     007A  287C               	goto	u201
   591     007B  287D               	goto	u200
   592     007C                     u201:
   593     007C  2854               	goto	l835
   594     007D                     u200:
   595     007D                     l841:
   596                           
   597                           ;main.c: 116:  _delay((unsigned long)((1000)*(32000000/4000.0)));
   598     007D  3029               	movlw	41
   599     007E  00F5               	movwf	??_main+1
   600     007F  3096               	movlw	150
   601     0080  00F4               	movwf	??_main
   602     0081  307F               	movlw	127
   603     0082                     u337:
   604     0082  0B89               	decfsz	9,f
   605     0083  2882               	goto	u337
   606     0084  0BF4               	decfsz	??_main,f
   607     0085  2882               	goto	u337
   608     0086  0BF5               	decfsz	??_main+1,f
   609     0087  2882               	goto	u337
   610     0088  0000               	nop
   611     0089                     l843:
   612                           
   613                           ;main.c: 119:  for (uint8_t i = 1; i <= 8; i++){
   614     0089  0020               	movlb	0	; select bank0
   615     008A  01A9               	clrf	main@i_252
   616     008B  0AA9               	incf	main@i_252,f
   617     008C                     l847:
   618                           
   619                           ;main.c: 120:   max7219_write(i, 0x00);
   620     008C  01F2               	clrf	max7219_write@data
   621     008D  0829               	movf	main@i_252,w
   622     008E  3181  212E  3180   	fcall	_max7219_write
   623     0091                     l849:
   624                           
   625                           ;main.c: 121:  }
   626     0091  3001               	movlw	1
   627     0092  00F4               	movwf	??_main
   628     0093  0874               	movf	??_main,w
   629     0094  0020               	movlb	0	; select bank0
   630     0095  07A9               	addwf	main@i_252,f
   631     0096                     l851:
   632     0096  3009               	movlw	9
   633     0097  0229               	subwf	main@i_252,w
   634     0098  1C03               	skipc
   635     0099  289B               	goto	u211
   636     009A  289C               	goto	u210
   637     009B                     u211:
   638     009B  288C               	goto	l847
   639     009C                     u210:
   640     009C                     l70:
   641                           
   642                           ;main.c: 126:  INTCONbits.PEIE = 1;
   643     009C  170B               	bsf	11,6	;volatile
   644                           
   645                           ;main.c: 127:  PIR1bits.RCIF = 0;
   646     009D  1291               	bcf	17,5	;volatile
   647                           
   648                           ;main.c: 128:  PIE1bits.RCIE = 1;
   649     009E  0021               	movlb	1	; select bank1
   650     009F  1691               	bsf	17,5	;volatile
   651                           
   652                           ;main.c: 129:  (INTCONbits.GIE = 1);
   653     00A0  178B               	bsf	11,7	;volatile
   654     00A1                     l853:
   655                           
   656                           ;main.c: 134:   if ( Buffer.index >= 6 ){
   657     00A1  3006               	movlw	6
   658     00A2  0020               	movlb	0	; select bank0
   659     00A3  0226               	subwf	_Buffer+6,w	;volatile
   660     00A4  1C03               	skipc
   661     00A5  28A7               	goto	u221
   662     00A6  28A8               	goto	u220
   663     00A7                     u221:
   664     00A7  28A1               	goto	l853
   665     00A8                     u220:
   666     00A8                     l855:
   667                           
   668                           ;main.c: 135:    Buffer.index = 0;
   669     00A8  01A6               	clrf	_Buffer+6	;volatile
   670     00A9                     l857:
   671                           
   672                           ;main.c: 137:    if ( Buffer.data[5] == '\r' || Buffer.data[5] == '\n' ){
   673     00A9  300D               	movlw	13
   674     00AA  0625               	xorwf	_Buffer+5,w	;volatile
   675     00AB  1903               	btfsc	3,2
   676     00AC  28AE               	goto	u231
   677     00AD  28AF               	goto	u230
   678     00AE                     u231:
   679     00AE  28B5               	goto	l75
   680     00AF                     u230:
   681     00AF                     l859:
   682     00AF  300A               	movlw	10
   683     00B0  0625               	xorwf	_Buffer+5,w	;volatile
   684     00B1  1D03               	btfss	3,2
   685     00B2  28B4               	goto	u241
   686     00B3  28B5               	goto	u240
   687     00B4                     u241:
   688     00B4  28A1               	goto	l853
   689     00B5                     u240:
   690     00B5                     l75:
   691                           
   692                           ;main.c: 138:     (INTCONbits.GIE = 0);
   693     00B5  138B               	bcf	11,7	;volatile
   694     00B6                     l861:
   695                           
   696                           ;main.c: 141:     max7219_write(1, Buffer.data[0]);
   697     00B6  0820               	movf	_Buffer,w	;volatile
   698     00B7  00F2               	movwf	max7219_write@data
   699     00B8  3001               	movlw	1
   700     00B9  3181  212E  3180   	fcall	_max7219_write
   701                           
   702                           ;main.c: 142:     max7219_write(2, Buffer.data[1]);
   703     00BC  0020               	movlb	0	; select bank0
   704     00BD  0821               	movf	_Buffer+1,w	;volatile
   705     00BE  00F2               	movwf	max7219_write@data
   706     00BF  3002               	movlw	2
   707     00C0  3181  212E  3180   	fcall	_max7219_write
   708                           
   709                           ;main.c: 143:     max7219_write(3, Buffer.data[2]);
   710     00C3  0020               	movlb	0	; select bank0
   711     00C4  0822               	movf	_Buffer+2,w	;volatile
   712     00C5  00F2               	movwf	max7219_write@data
   713     00C6  3003               	movlw	3
   714     00C7  3181  212E  3180   	fcall	_max7219_write
   715     00CA                     l863:
   716                           
   717                           ;main.c: 147:     uint8_t currentLedIndex = 0;
   718     00CA  0020               	movlb	0	; select bank0
   719     00CB  01A7               	clrf	main@currentLedIndex
   720     00CC                     l865:
   721                           
   722                           ;main.c: 149:     if (Buffer.data[3] > 20 ){
   723     00CC  3015               	movlw	21
   724     00CD  0223               	subwf	_Buffer+3,w	;volatile
   725     00CE  1C03               	skipc
   726     00CF  28D1               	goto	u251
   727     00D0  28D2               	goto	u250
   728     00D1                     u251:
   729     00D1  28D4               	goto	l869
   730     00D2                     u250:
   731     00D2                     l867:
   732                           
   733                           ;main.c: 150:      Buffer.data[3] = 20;
   734     00D2  3014               	movlw	20
   735     00D3  00A3               	movwf	_Buffer+3	;volatile
   736     00D4                     l869:
   737                           
   738                           ;main.c: 153:     for (uint8_t i = 0; i < 3; i++){
   739     00D4  01AA               	clrf	main@i_278
   740     00D5                     l875:
   741                           
   742                           ;main.c: 154:      uint8_t tempData = 0x00;
   743     00D5  01A8               	clrf	main@tempData
   744                           
   745                           ;main.c: 156:      for (uint8_t j = 0; j < 8; j++, currentLedIndex++){
   746     00D6  01AB               	clrf	main@j
   747     00D7                     l881:
   748                           
   749                           ;main.c: 158:       if ( currentLedIndex < Buffer.data[3] ){
   750     00D7  0823               	movf	_Buffer+3,w	;volatile
   751     00D8  0227               	subwf	main@currentLedIndex,w
   752     00D9  1803               	skipnc
   753     00DA  28DC               	goto	u261
   754     00DB  28DD               	goto	u260
   755     00DC                     u261:
   756     00DC  28EA               	goto	l81
   757     00DD                     u260:
   758     00DD                     l883:
   759                           
   760                           ;main.c: 159:        tempData |= 1 << (7 - j);
   761     00DD  3001               	movlw	1
   762     00DE  00F4               	movwf	??_main
   763     00DF  082B               	movf	main@j,w
   764     00E0  3C07               	sublw	7
   765     00E1  0A89               	incf	9,f
   766     00E2  28E4               	goto	u274
   767     00E3                     u275:
   768     00E3  35F4               	lslf	??_main,f
   769     00E4                     u274:
   770     00E4  0B89               	decfsz	9,f
   771     00E5  28E3               	goto	u275
   772     00E6  0874               	movf	??_main,w
   773     00E7  00F5               	movwf	??_main+1
   774     00E8  0875               	movf	??_main+1,w
   775     00E9  04A8               	iorwf	main@tempData,f
   776     00EA                     l81:	
   777                           ;main.c: 160:       }
   778                           
   779                           
   780                           ;main.c: 161:      }
   781     00EA  3001               	movlw	1
   782     00EB  00F4               	movwf	??_main
   783     00EC  0874               	movf	??_main,w
   784     00ED  07AB               	addwf	main@j,f
   785     00EE  3001               	movlw	1
   786     00EF  00F4               	movwf	??_main
   787     00F0  0874               	movf	??_main,w
   788     00F1  07A7               	addwf	main@currentLedIndex,f
   789     00F2                     l885:
   790     00F2  3008               	movlw	8
   791     00F3  022B               	subwf	main@j,w
   792     00F4  1C03               	skipc
   793     00F5  28F7               	goto	u281
   794     00F6  28F8               	goto	u280
   795     00F7                     u281:
   796     00F7  28D7               	goto	l881
   797     00F8                     u280:
   798     00F8                     l887:
   799                           
   800                           ;main.c: 163:      max7219_write(4+i, tempData);
   801     00F8  0828               	movf	main@tempData,w
   802     00F9  00F2               	movwf	max7219_write@data
   803     00FA  082A               	movf	main@i_278,w
   804     00FB  3E04               	addlw	4
   805     00FC  3181  212E  3180   	fcall	_max7219_write
   806     00FF                     l889:
   807                           
   808                           ;main.c: 165:     }
   809     00FF  3001               	movlw	1
   810     0100  00F4               	movwf	??_main
   811     0101  0874               	movf	??_main,w
   812     0102  0020               	movlb	0	; select bank0
   813     0103  07AA               	addwf	main@i_278,f
   814     0104                     l891:
   815     0104  3003               	movlw	3
   816     0105  022A               	subwf	main@i_278,w
   817     0106  1C03               	skipc
   818     0107  2909               	goto	u291
   819     0108  290A               	goto	u290
   820     0109                     u291:
   821     0109  28D5               	goto	l875
   822     010A                     u290:
   823     010A                     l893:
   824                           
   825                           ;main.c: 169:     max7219_write(0x0A, Buffer.data[4] & 0xF);
   826     010A  0824               	movf	_Buffer+4,w	;volatile
   827     010B  390F               	andlw	15
   828     010C  00F2               	movwf	max7219_write@data
   829     010D  300A               	movlw	10
   830     010E  3181  212E  3180   	fcall	_max7219_write
   831     0111                     l895:
   832                           
   833                           ;main.c: 171:     (INTCONbits.GIE = 1);
   834     0111  178B               	bsf	11,7	;volatile
   835     0112  28A1               	goto	l853
   836     0113  2826               	ljmp	start
   837     0114                     __end_of_main:
   838                           
   839                           	psect	text1
   840     012E                     __ptext1:	
   841 ;; *************** function _max7219_write *****************
   842 ;; Defined at:
   843 ;;		line 73 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  address         1    wreg     unsigned char 
   846 ;;  data            1    2[COMMON] unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  address         1    3[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1
   858 ;;      Params:         1       0       0
   859 ;;      Locals:         1       0       0
   860 ;;      Temps:          0       0       0
   861 ;;      Totals:         2       0       0
   862 ;;Total ram usage:        2 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872     012E                     _max7219_write:	
   873                           ;psect for function _max7219_write
   874                           
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _max7219_write: [wreg]
   878                           ;max7219_write@address stored from wreg
   879     012E  00F3               	movwf	max7219_write@address
   880     012F                     l803:
   881                           
   882                           ;main.c: 74:  LATAbits.LATA2 = 0;
   883     012F  0022               	movlb	2	; select bank2
   884     0130  110C               	bcf	12,2	;volatile
   885     0131                     l805:
   886                           
   887                           ;main.c: 75:   SSPBUF = address;while (SSPSTATbits.BF) __nop();
   888     0131  0873               	movf	max7219_write@address,w
   889     0132  0024               	movlb	4	; select bank4
   890     0133  0091               	movwf	17	;volatile
   891     0134  2936               	goto	l53
   892     0135                     l54:
   893     0135  0000               	nop
   894     0136                     l53:
   895     0136  0024               	movlb	4	; select bank4
   896     0137  1814               	btfsc	20,0	;volatile
   897     0138  293A               	goto	u171
   898     0139  293B               	goto	u170
   899     013A                     u171:
   900     013A  2935               	goto	l54
   901     013B                     u170:
   902     013B                     l807:
   903                           
   904                           ;main.c: 76:   SSPBUF = data;while (SSPSTATbits.BF) __nop();
   905     013B  0872               	movf	max7219_write@data,w
   906     013C  0091               	movwf	17	;volatile
   907     013D  293F               	goto	l56
   908     013E                     l57:
   909     013E  0000               	nop
   910     013F                     l56:
   911     013F  0024               	movlb	4	; select bank4
   912     0140  1814               	btfsc	20,0	;volatile
   913     0141  2943               	goto	u181
   914     0142  2944               	goto	u180
   915     0143                     u181:
   916     0143  293E               	goto	l57
   917     0144                     u180:
   918     0144                     l58:
   919                           
   920                           ;main.c: 77:  LATAbits.LATA2 = 1;
   921     0144  0022               	movlb	2	; select bank2
   922     0145  150C               	bsf	12,2	;volatile
   923     0146                     l59:
   924     0146  0008               	return
   925     0147                     __end_of_max7219_write:
   926                           
   927                           	psect	intentry
   928     0004                     __pintentry:	
   929 ;; *************** function _ISR *****************
   930 ;; Defined at:
   931 ;;		line 183 in file "main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  data            1    1[COMMON] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1
   945 ;;      Params:         0       0       0
   946 ;;      Locals:         1       0       0
   947 ;;      Temps:          1       0       0
   948 ;;      Totals:         2       0       0
   949 ;;Total ram usage:        2 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		Interrupt level 1
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958     0004                     _ISR:
   959                           
   960                           ;incstack = 0
   961     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   962                           
   963                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
   964     0005  3180               	pagesel	$
   965     0006                     i1l897:
   966                           
   967                           ;main.c: 185:  if ( RCIE && RCIF ){
   968     0006  0021               	movlb	1	; select bank1
   969     0007  1E91               	btfss	17,5	;volatile
   970     0008  280A               	goto	u30_21
   971     0009  280B               	goto	u30_20
   972     000A                     u30_21:
   973     000A  2824               	goto	i1l91
   974     000B                     u30_20:
   975     000B                     i1l899:
   976     000B  0020               	movlb	0	; select bank0
   977     000C  1E91               	btfss	17,5	;volatile
   978     000D  280F               	goto	u31_21
   979     000E  2810               	goto	u31_20
   980     000F                     u31_21:
   981     000F  2824               	goto	i1l91
   982     0010                     u31_20:
   983     0010                     i1l901:
   984                           
   985                           ;main.c: 186:   uint8_t data = RCREG;
   986     0010  0023               	movlb	3	; select bank3
   987     0011  0819               	movf	25,w	;volatile
   988     0012  00F1               	movwf	ISR@data
   989                           
   990                           ;main.c: 188:   if ( Buffer.index < sizeof(Buffer.data) ){
   991     0013  3006               	movlw	6
   992     0014  0020               	movlb	0	; select bank0
   993     0015  0226               	subwf	_Buffer+6,w	;volatile
   994     0016  1803               	skipnc
   995     0017  2819               	goto	u32_21
   996     0018  281A               	goto	u32_20
   997     0019                     u32_21:
   998     0019  2824               	goto	i1l91
   999     001A                     u32_20:
  1000     001A                     i1l903:
  1001                           
  1002                           ;main.c: 189:    Buffer.data[Buffer.index] = data;
  1003     001A  0826               	movf	_Buffer+6,w	;volatile
  1004     001B  3E20               	addlw	(low (_Buffer| 0))& (0+255)
  1005     001C  0086               	movwf	6
  1006     001D  0187               	clrf	7
  1007     001E  0871               	movf	ISR@data,w
  1008     001F  0081               	movwf	1
  1009     0020                     i1l905:
  1010                           
  1011                           ;main.c: 190:    Buffer.index++;
  1012     0020  3001               	movlw	1
  1013     0021  00F0               	movwf	??_ISR
  1014     0022  0870               	movf	??_ISR,w
  1015     0023  07A6               	addwf	_Buffer+6,f	;volatile
  1016     0024                     i1l91:
  1017     0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1018     0025  0009               	retfie
  1019     0026                     __end_of_ISR:
  1020     007E                     btemp	set	126	;btemp
  1021     007E                     int$flags	set	126
  1022     007E                     wtemp0	set	126
  1023                           
  1024                           	psect	idloc
  1025                           
  1026                           ;Config register IDLOC0 @ 0x8000
  1027                           ;	unspecified, using default values
  1028     8000                     	org	32768
  1029     8000  3FFF               	dw	16383
  1030                           
  1031                           ;Config register IDLOC1 @ 0x8001
  1032                           ;	unspecified, using default values
  1033     8001                     	org	32769
  1034     8001  3FFF               	dw	16383
  1035                           
  1036                           ;Config register IDLOC2 @ 0x8002
  1037                           ;	unspecified, using default values
  1038     8002                     	org	32770
  1039     8002  3FFF               	dw	16383
  1040                           
  1041                           ;Config register IDLOC3 @ 0x8003
  1042                           ;	unspecified, using default values
  1043     8003                     	org	32771
  1044     8003  3FFF               	dw	16383
  1045                           
  1046                           	psect	config
  1047                           
  1048                           ;Config register CONFIG1 @ 0x8007
  1049                           ;	Oscillator Selection
  1050                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1051                           ;	Watchdog Timer Enable
  1052                           ;	WDTE = OFF, WDT disabled
  1053                           ;	Power-up Timer Enable
  1054                           ;	PWRTE = ON, PWRT enabled
  1055                           ;	MCLR Pin Function Select
  1056                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1057                           ;	Flash Program Memory Code Protection
  1058                           ;	CP = OFF, Program memory code protection is disabled
  1059                           ;	Data Memory Code Protection
  1060                           ;	CPD = OFF, Data memory code protection is disabled
  1061                           ;	Brown-out Reset Enable
  1062                           ;	BOREN = ON, Brown-out Reset enabled
  1063                           ;	Clock Out Enable
  1064                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1065                           ;	Internal/External Switchover
  1066                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1067                           ;	Fail-Safe Clock Monitor Enable
  1068                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1069     8007                     	org	32775
  1070     8007  3F84               	dw	16260
  1071                           
  1072                           ;Config register CONFIG2 @ 0x8008
  1073                           ;	Flash Memory Self-Write Protection
  1074                           ;	WRT = OFF, Write protection off
  1075                           ;	PLL Enable
  1076                           ;	PLLEN = ON, 4x PLL enabled
  1077                           ;	Stack Overflow/Underflow Reset Enable
  1078                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1079                           ;	Brown-out Reset Voltage Selection
  1080                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1081                           ;	Low-Voltage Programming Enable
  1082                           ;	LVP = ON, Low-voltage programming enabled
  1083     8008                     	org	32776
  1084     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         7
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      6      13
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_max7219_write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     918
                                              4 COMMON     4     4      0
                                              0 BANK0      6     6      0
                      _max7219_write
 ---------------------------------------------------------------------------------
 (1) _max7219_write                                        2     1      1     576
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _max7219_write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      15       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6       D       6       16.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      15       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Mar 13 10:13:36 2025

            _SSPSTATbits 0214                       l53 0136                       l54 0135  
                     l70 009C                       l56 013F                       l64 0037  
                     l57 013E                       l81 00EA                       l58 0144  
                     l59 0146                       l75 00B5                      l803 012F  
                    l811 003B                      l805 0131                      l821 0047  
                    l813 003D                      l807 013B                      l823 0049  
                    l815 0040                      l841 007D                      l825 004B  
                    l817 0041                      l809 0032                      l851 0096  
                    l843 0089                      l835 0054                      l827 004E  
                    l819 0044                      l861 00B6                      l853 00A1  
                    l837 0072                      l829 0050                      l863 00CA  
                    l855 00A8                      l847 008C                      l839 0077  
                    l881 00D7                      l865 00CC                      l857 00A9  
                    l849 0091                      l891 0104                      l883 00DD  
                    l875 00D5                      l867 00D2                      l859 00AF  
                    l893 010A                      l885 00F2                      l869 00D4  
                    l895 0111                      l887 00F8                      l889 00FF  
                    u200 007D                      u201 007C                      u210 009C  
                    u211 009B                      u220 00A8                      u221 00A7  
                    u230 00AF                      u231 00AE                      u240 00B5  
                    u241 00B4                      u170 013B                      u250 00D2  
                    u171 013A                      u251 00D1                      u180 0144  
                    u260 00DD                      u181 0143                      u261 00DC  
                    u190 003B                      u191 003A                      u280 00F8  
                    u281 00F7                      u337 0082                      u290 010A  
                    u274 00E4                      u291 0109                      u275 00E3  
                    _ISR 0004                      wreg 0009                     ?_ISR 0070  
  __end_of_max7219_write 0147                     _RCIE 048D                     _RCIF 008D  
                   i1l91 0024                     _main 0032                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0026                    ??_ISR 0070                    ?_main 0070  
                  i1l901 0010                    i1l903 001A                    i1l905 0020  
                  i1l897 0006                    i1l899 000B                    _RCREG 0199  
                  _RCSTA 019D                    u30_20 000B                    u30_21 000A  
                  u31_20 0010                    u31_21 000F                    u32_20 001A  
                  u32_21 0019                    _TRISA 008C                    _TXSTA 019E  
           main@tempData 0028                    main@i 002C                    main@j 002B  
                  status 0003      main@currentLedIndex 0027                    wtemp0 007E  
        __initialization 0027             __end_of_main 0114                   ??_main 0074  
                 _APFCON 011D                   _ANSELA 018C                   _SPBRGH 019C  
                 _SPBRGL 019B                   _SSPBUF 0211                   _Buffer 0020  
__end_of__initialization 002F           __pcstackCOMMON 0070               __pbssBANK0 0020  
                ISR@data 0071               __pmaintext 0032               __pintentry 0004  
                _BAUDCON 019F                  _SSPSTAT 0214     __end_of_initSequence 012E  
                __ptext1 012E     end_of_initialization 002F            _max7219_write 012E  
    start_initialization 0027              __end_of_ISR 0026           ?_max7219_write 0072  
           _initSequence 0114                ___latbits 0000            __pcstackBANK0 0027  
        ??_max7219_write 0073        max7219_write@data 0072                 _LATAbits 010C  
               _PIE1bits 0091     max7219_write@address 0073                 _PIR1bits 0011  
               _SSP1CON1 0215                main@i_252 0029                main@i_278 002A  
               int$flags 007E              _OSCSTATbits 009A               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 0099            __pstringtext1 0114  
